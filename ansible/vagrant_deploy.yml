---
- hosts: vagrant_server
  vars_files:
    - vagrant_vars.yml
    - secrets.yml

  tasks:

################################################################################
########### GIT PULL FILES
#################################################################################

    - name: Get frontend files from git
      git: 
        force : yes
        repo: 'https://{{ gitUser }}:{{ bitbucketPassword }}@bitbucket.org/{{ gitUser }}/{{ projectNameFrontend }}.git'
        dest: '/home/vagrant/{{ projectNameFrontend }}'

    - name: Get backend files from git
      git: 
        force : yes
        repo: 'https://{{ gitUser }}:{{ bitbucketPassword }}@bitbucket.org/{{ gitUser }}/{{ projectNameBackend }}.git'
        dest: '/home/vagrant/{{ projectNameBackend }}'

    - name: Copy config.js (for security reasons it's not under git)
      become: yes
      copy:
        src: '{{localPath}}/{{ projectNameBackend }}/src/config.js'
        dest: '/home/{{ projectUser }}/{{ projectNameBackend }}/src/'
        owner: '{{ projectUser }}'
        group: '{{ projectUser }}'
        mode: 0644

###############################################################################
########## NPM INSTALL PACKAGES
###############################################################################

    - name: set environment variables 
      shell: "echo 'export NODE_ENV=production && export PRODUCTION_PLATFORM=vagrant' >> $HOME/.bashrc"

    - name: Install packages based on package.json for Frontend
      npm:
        path: /home/{{ projectUser }}/{{ projectNameFrontend }}/

    - name: Install packages based on package.json for Backend
      npm:
        path: /home/{{ projectUser }}/{{ projectNameBackend }}/

    - name: remove default nginx site
      become: yes
      file: path={{ productionFrontendPath }} state=absent

    - name: Create dir for Frontend
      become: yes
      file:
        path: '{{ productionFrontendPath }}'
        state: directory

    - name: Build Frontend for production
      become: yes
      shell: 'ng build -prod --output-path={{ productionFrontendPath }}'
      args:
        chdir: /home/{{ projectUser }}/{{ projectNameFrontend }}/

    - name: Clean dist folder
      shell: 'gulp clean' 
      args:
        chdir: /home/{{ projectUser }}/{{ projectNameBackend }}/

    - name: Build backend for production
      shell: 'gulp build-production'
      args: 
        chdir: /home/{{ projectUser }}/{{ projectNameBackend }}/

###############################################################################
########## RELOAD NGINX
###############################################################################
    
    - name: reload nginx
      become: true
      service: 
        name: nginx 
        state: reloaded

###############################################################################
########## RELOAD PM2
###############################################################################
    
    - name: Start backend with PM2
      shell: 'pm2 restart "api"'


